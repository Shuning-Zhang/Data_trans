[
    {
        "6_1_0": "```python\ndef transform_dataset(test_set):\n    headers = test_set[0][1:]\n    transformed_output = []\n\n    for product in test_set[2:]:\n        product_name = product[0]\n        values = product[1:]\n        for header, value in zip(headers, values):\n            transformed_output.append([header, product_name, value])\n\n    return transformed_output\n\n# Example usage\ntest_set = [['', 'A', 'B', 'C'], ['', '', '', ''], \n            ['Product2', '3', '5', '10'], \n            ['Product3', '0', '1', '4'], \n            ['Product4', '1', '0', '0'], \n            ['Product5', '3', '8', '7'], \n            ['Product6', '9', '2', '1']]\n\ntransformed_output = transform_dataset(test_set)\nprint(transformed_output)\n```"
    },
    {
        "6_2_0": "```python\ndef transform_dataset(test_set):\n    result = []\n    headers = test_set[0][1:]\n    for row in test_set[2:]:\n        product_name = row[0]\n        for i, value in enumerate(row[1:]):\n            result.append([headers[i], product_name, value])\n    return result\n\ntest_set = [['', 'A', 'B', 'C'], \n            ['', '', '', ''], \n            ['Product3', '0', '1', '4'], \n            ['Product4', '1', '0', '0'], \n            ['Product5', '3', '8', '7'], \n            ['Product6', '9', '2', '1']]\n\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "6_3_0": "```python\ndef transform_dataset(test_set):\n    headers = test_set[0][1:]\n    products = test_set[2:]\n    result = []\n    \n    for product in products:\n        product_name = product[0]\n        for i, value in enumerate(product[1:]):\n            result.append([headers[i], product_name, value])\n    \n    return result\n\n# Test set included as input to the function\ntest_set = [['', 'A', 'B', 'C'], ['', '', '', ''], ['Product4', '1', '0', '0'], ['Product5', '3', '8', '7'], ['Product6', '9', '2', '1']]\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "6_4_0": "```python\ndef transform_dataset(input_data):\n    output_data = []\n    headers = input_data[0][1:]\n\n    for row in input_data[2:]:\n        product = row[0]\n        for col_idx, value in enumerate(row[1:]):\n            output_data.append([headers[col_idx], product, value])\n\n    return output_data\n\n# Test function with the provided test set\ntest_set = [['', 'A', 'B', 'C'], ['', '', '', ''], ['Product5', '3', '8', '7'], ['Product6', '9', '2', '1']]\nprint(transform_dataset(test_set))\n```\n"
    },
    {
        "6_5_0": "```python\ndef transform_data(input_data):\n    output_data = []\n    headers = input_data[0][1:]  # Get the column headers ['A', 'B', 'C']\n\n    for row in input_data[2:]:  # Skip the first two rows which are headers and empty\n        product_name = row[0]\n        for i, value in enumerate(row[1:]):\n            output_data.append([headers[i], product_name, value])\n\n    return output_data\n\n# Example test set\ntest_set = [['', 'A', 'B', 'C'], ['', '', '', ''], ['Product6', '9', '2', '1']]\noutput = transform_data(test_set)\nprint(output)\n```\n"
    },
    {
        "12_1_0": "```python\ndef transform_dataset(dataset):\n    return [row for row in dataset if row[4] or row[6]]\n\n# Test the function with the provided test dataset\ntest_set = [\n    ['', '', '', '', '', '', '', ''], \n    ['90210', 'AAAAA', '6950', 'y1', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y2', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y3', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y4', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y5', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y6', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y7', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y8', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y9', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y10', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y11', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y12', '', '$25.00', '', ''], \n    ['90210', 'AAAAA', '6950', 'y13', 'CC', '$25.00', '13', '$325.00'], \n    ['', '', '', '', '', '', '', ''], \n    ['90210', 'AAAAA', '1974', 'z1', '', '$555.00', '', ''], \n    ['90210', 'AAAAA', '1974', 'z2', '', '$555.00', '', ''], \n    ['90210', 'AAAAA', '1974', 'z3', '', '$555.00', '', ''], \n    ['90210', 'AAAAA', '1974', 'z4', '', '$555.00', '', ''], \n    ['90210', 'AAAAA', '1974', 'z5', '', '$555.00', '', ''], \n    ['90210', 'AAAAA', '1974', 'z6', 'BB', '$555.00', '6', '$3,330.00'], \n    ['', '', '', '', '', '', '', ''], \n    ['73576', 'ABCBA', '1894', 'c1', '', '$848.40', '', ''], \n    ['73576', 'ABCBA', '1894', 'c2', '', '$848.40', '', ''], \n    ['73576', 'ABCBA', '1894', 'c3', '', '$848.40', '', ''], \n    ['73576', 'ABCBA', '1894', 'c4', '', '$848.40', '', ''], \n    ['73576', 'ABCBA', '1894', 'c5', '11/5/1976', '$848.40', '5', '$4,242.00'], \n    ['', '', '', '', '', '', '', ''], \n    ['10101', 'HHHHH', '1771', 'd1', '10/30/1979', '$555.00', '1', '$2,333.00'], \n    ['', '', '', '', '', '', '', ''], \n    ['88888', 'TBDTB', '1991', 't1', '', '$1,111.00', '', ''], \n    ['88888', 'TBDTB', '1991', 't2', '', '$1,111.00', '', ''], \n    ['88888', 'TBDTB', '1991', 't3', '', '$1,111.00', '', ''], \n    ['88888', 'TBDTB', '1991', 't4', '', '$1,111.00', '', ''], \n    ['88888', 'TBDTB', '1991', 't5', '', '$1,111.00', '', ''], \n    ['88888', 'TBDTB', '1991', 't6', '10/31/2013', '$1,111.00', '6', '$6,666.00']\n]\n\noutput = transform_dataset(test_set)\nprint(output)\n```"
    },
    {
        "12_2_0": "```python\ndef transform_dataset(test_set):\n    output_dataset = []\n    for record in test_set:\n        if record[4] != '' and record[6] != '':\n            output_dataset.append(record)\n    return output_dataset\n\n# Example test\ntest_set = [\n    ['', '', '', '', '', '', '', ''],\n    ['90210', 'AAAAA', '6950', 'y1', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y2', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y3', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y4', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y5', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y6', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y7', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y8', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y9', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y10', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y11', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y12', '', '$25.00', '', ''],\n    ['90210', 'AAAAA', '6950', 'y13', 'CC', '$25.00', '13', '$325.00'],\n    ['', '', '', '', '', '', '', ''],\n    ['73576', 'ABCBA', '1894', 'c1', '', '$848.40', '', ''],\n    ['73576', 'ABCBA', '1894', 'c2', '', '$848.40', '', ''],\n    ['73576', 'ABCBA', '1894', 'c3', '', '$848.40', '', ''],\n    ['73576', 'ABCBA', '1894', 'c4', '', '$848.40', '', ''],\n    ['73576', 'ABCBA', '1894', 'c5', '11/5/1976', '$848.40', '5', '$4,242.00'],\n    ['', '', '', '', '', '', '', ''],\n    ['10101', 'HHHHH', '1771', 'd1', '10/30/1979', '$555.00', '1', '$2,333.00'],\n    ['', '', '', '', '', '', '', ''],\n    ['88888', 'TBDTB', '1991', 't1', '', '$1,111.00', '', ''],\n    ['88888', 'TBDTB', '1991', 't2', '', '$1,111.00', '', ''],\n    ['88888', 'TBDTB', '1991', 't3', '', '$1,111.00', '', ''],\n    ['88888', 'TBDTB', '1991', 't4', '', '$1,111.00', '', ''],\n    ['88888', 'TBDTB', '1991', 't5', '', '$1,111.00', '', ''],\n    ['88888', 'TBDTB', '1991', 't6', '10/31/2013', '$1,111.00', '6', '$6,666.00']\n]\n\nprint(transform_dataset(test_set))\n```\n"
    },
    {
        "12_3_0": "```python\ndef transform_dataset(test_set):\n    result = []\n    for record in test_set:\n        if record[4] != '':\n            result.append(record)\n    return result\n\ntest_set = [['', '', '', '', '', '', '', ''], ['90210', 'AAAAA', '6950', 'y1', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y2', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y3', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y4', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y5', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y6', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y7', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y8', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y9', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y10', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y11', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y12', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y13', 'CC', '$25.00', '13', '$325.00'], ['', '', '', '', '', '', '', ''], ['73576', 'ABCBA', '1894', 'c1', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c2', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c3', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c4', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c5', '11/5/1976', '$848.40', '5', '$4,242.00'], ['', '', '', '', '', '', '', ''], ['88888', 'TBDTB', '1991', 't1', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't2', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't3', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't4', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't5', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't6', '10/31/2013', '$1,111.00', '6', '$6,666.00']]\n\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "12_4_0": "```python\ndef transform_dataset(input_data):\n    result = []\n    for i in range(len(input_data)):\n        if input_data[i][4] != '':\n            result.append(input_data[i])\n    return result\n\ntest_set = [['', '', '', '', '', '', '', ''], \n            ['90210', 'AAAAA', '6950', 'y1', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y2', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y3', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y4', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y5', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y6', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y7', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y8', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y9', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y10', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y11', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y12', '', '$25.00', '', ''], \n            ['90210', 'AAAAA', '6950', 'y13', 'CC', '$25.00', '13', '$325.00'], \n            ['', '', '', '', '', '', '', ''], \n            ['73576', 'ABCBA', '1894', 'c1', '', '$848.40', '', ''], \n            ['73576', 'ABCBA', '1894', 'c2', '', '$848.40', '', ''], \n            ['73576', 'ABCBA', '1894', 'c3', '', '$848.40', '', ''], \n            ['73576', 'ABCBA', '1894', 'c4', '', '$848.40', '', ''], \n            ['73576', 'ABCBA', '1894', 'c5', '11/5/1976', '$848.40', '5', '$4,242.00'], \n            ['', '', '', '', '', '', '', ''], \n            ['88888', 'TBDTB', '1991', 't1', '', '$1,111.00', '', ''], \n            ['88888', 'TBDTB', '1991', 't2', '', '$1,111.00', '', ''], \n            ['88888', 'TBDTB', '1991', 't3', '', '$1,111.00', '', ''], \n            ['88888', 'TBDTB', '1991', 't4', '', '$1,111.00', '', ''], \n            ['88888', 'TBDTB', '1991', 't5', '', '$1,111.00', '', ''], \n            ['88888', 'TBDTB', '1991', 't6', '10/31/2013', '$1,111.00', '6', '$6,666.00']]\n\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "12_5_0": "```python\ndef transform_dataset(test_set):\n    result = []\n    for i in range(len(test_set)):\n        if any(test_set[i][j].strip() for j in range(len(test_set[i]))):\n            if test_set[i][4]:\n                result.append(test_set[i])\n    return result\n\ntest_set = [['', '', '', '', '', '', '', ''], ['90210', 'AAAAA', '6950', 'y1', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y2', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y3', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y4', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y5', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y6', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y7', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y8', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y9', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y10', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y11', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y12', '', '$25.00', '', ''], ['90210', 'AAAAA', '6950', 'y13', 'CC', '$25.00', '13', '$325.00'], ['', '', '', '', '', '', '', ''], ['73576', 'ABCBA', '1894', 'c1', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c2', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c3', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c4', '', '$848.40', '', ''], ['73576', 'ABCBA', '1894', 'c5', '11/5/1976', '$848.40', '5', '$4,242.00'], ['', '', '', '', '', '', '', ''], ['88888', 'TBDTB', '1991', 't1', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't2', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't3', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't4', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't5', '', '$1,111.00', '', ''], ['88888', 'TBDTB', '1991', 't6', '10/31/2013', '$1,111.00', '6', '$6,666.00']]\n\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "51_1_0": "```python\ndef transform_dataset(test_set):\n    header = test_set[0]\n    results = []\n\n    for row in test_set[1:]:\n        name = row[0]\n        for i, value in enumerate(row[1:], start=1):\n            if value:\n                results.append([name, header[i], value])\n\n    return results\n\n# Test the function\ntest_set = [['', 'Qual 1', 'Qual 2', 'Qual 3'], \n            ['Andrew', 'C', 'D', 'I'], \n            ['Carl', '', 'E', 'F'], \n            ['Bob', 'G', 'J', 'H'], \n            ['Tom', 'P', 'K', 'L'], \n            ['Jobs', 'Y', 'M', 'Z']]\n\nprint(transform_dataset(test_set))\n```\n"
    },
    {
        "51_2_0": "```python\ndef transform_dataset(test_set):\n    transformed = []\n    headers = test_set[0][1:]\n    for row in test_set[1:]:\n        name = row[0]\n        for i, value in enumerate(row[1:]):\n            if value:\n                transformed.append([name, headers[i], value])\n    return transformed\n\n# Example usage\ntest_set = [['', 'Qual 1', 'Qual 2', 'Qual 3'], ['Andrew', 'M', 'H', 'I'], ['Carl', '', 'F', 'G'], ['Tom', 'J', 'L', 'D'], ['Jobs', 'K', 'B', 'C']]\noutput = transform_dataset(test_set)\nprint(output)\n```"
    },
    {
        "51_3_0": "```python\ndef transform_dataset(input_dataset):\n    output_dataset = []\n    for row in input_dataset[1:]:\n        name = row[0]\n        for i, value in enumerate(row[1:], start=1):\n            if value:\n                output_dataset.append([name, input_dataset[0][i], value])\n    return output_dataset\n\ntest_set = [['', 'Qual 1', 'Qual 2', 'Qual 3'],\n            ['Carl', '', 'I', 'G'],\n            ['Tom', 'K', 'H', 'L'],\n            ['Jobs', 'C', 'M', 'B']]\n\ntransformed_test_set = transform_dataset(test_set)\nprint(transformed_test_set)\n```\n"
    },
    {
        "51_4_0": "```python\ndef transform_dataset(test_set):\n    headers = test_set[0][1:]\n    transformed_data = []\n    \n    for row in test_set[1:]:\n        name = row[0]\n        for i, value in enumerate(row[1:]):\n            if value:\n                transformed_data.append([name, headers[i], value])\n    \n    return transformed_data\n\n# Test the function with the provided test set\ntest_set = [['', 'Qual 1', 'Qual 2', 'Qual 3'], ['Carl', '', 'G', 'E'], ['Tom', 'H', 'I', 'J'], ['Jobs', 'C', 'K', 'B']]\noutput = transform_dataset(test_set)\nprint(output)\n```\n"
    },
    {
        "51_5_0": "```python\ndef transform_dataset(test_set):\n    headers = test_set[0]\n    result = []\n\n    for row in test_set[1:]:\n        name = row[0]\n        for idx, value in enumerate(row[1:], start=1):\n            if value:\n                result.append([name, headers[idx], value])\n\n    return result\n\n# Test Dataset\ntest_set = [['', 'Qual 1', 'Qual 2', 'Qual 3'], ['Carl', '', 'D', 'C'], ['Tom', 'K', 'J', 'I'], ['Jobs', 'O', 'N', 'M']]\noutput = transform_dataset(test_set)\n```"
    }
]